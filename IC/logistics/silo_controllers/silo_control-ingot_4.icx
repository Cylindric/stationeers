# INGOT SILO CONTROLLER
#
# This module watches the attached button, and when it's pressed,
# it will look for the hash currently set on the attached Controller
# and then if any of the attached Silos contains that hash, it will
# output one stack from it.
#
# The Setting for this IC will also be set to the current Quantity
# held in the found silo. If not found, it will be set to "-1", so a 
# batch-read "Max" or a "find greatest" will return the valid count.
#

use aliases

const ITEM1 =   412924554 # Astroloy
const MULTI1 = 20

const ITEM2 =  1579842814 # Hastelloy 
const MULTI2 = 20

const ITEM3 =  -787796599 # Inconel
const MULTI3 = 20

const ITEM4 = -1897868623 # Stellite
const MULTI4 = 20

###############################################################################

alias Controller d0
alias Button d1
alias Silo1 d2
alias Silo2 d3
alias Silo3 d4
alias Silo4 d5
const DESIRED_QTY = 1

var siloHash
var multi

start:

var requestedHash = Controller.Setting
var dispense = Button.Setting
var found = 0

siloHash = ITEM1
multi = MULTI1
alias silo d2
bdseal d2 ProcessSilo

siloHash = ITEM2
multi = MULTI2
alias silo d3
bdseal d3 ProcessSilo

siloHash = ITEM3
multi = MULTI3
alias silo d4
bdseal d4 ProcessSilo

siloHash = ITEM4
multi = MULTI4
alias silo d5
bdseal d5 ProcessSilo

if found == 0
    db.Setting = -1
end

j start

ProcessSilo:
    if requestedHash == siloHash
        var qty = silo.Quantity
        qty = qty * multi
        found = 1
        db.Setting = qty
        
        # If we're not actually dispensing right now, just return
        if dispense == 0
            j ra
        end

        # We are dispensing, so get on with it
        silo.ClearMemory = 1
        loop_silo:
            var available = silo.Quantity
            var exported = silo.ExportCount
            available = available * multi
            exported = exported * multi
            if available == 0
                j ra
            end
            if exported < DESIRED_QTY
                silo.Open = 1
                yield
                silo.Open = 0
                j loop_silo
            else
                silo.Open = 0
            end
    end
j ra
