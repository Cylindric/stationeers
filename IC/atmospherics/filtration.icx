# FILTRATION MODULE
# To be installed into Atmospherics Filtration Units
#
# If the ratio of the filtered gas in the input is too low, then
# filtration will pause (after a short delay).
#
# If the pressure on the output pipe is too high, filtration will
# stop immediately.
#
# The gas ratio measured and show depends on the cartridge types
# currently installed in the Filtration device.
#
# Attach the following devices to the IC Socket (*optional):
#   D0 - A console that will display current Filter Cartidge level
#   D1 - A console that will display current input gas ratio

use aliases

alias AverageFilterQtyDisplay d0
alias InputMolesDisplay d1

# SETTINGS
const MIN_INPUT_MOLES = 0.0
const MAX_OUTPUT_PRESSURE = 10000

# STATES
const STATE_FILTERING = 0
const STATE_OVERPRESSURE = 1
const STATE_IDLE = 2
const STATE_WAITING = 3

# COLOURS
const COLOR_BLUE = 0
const COLOR_GREY = 1
const COLOR_GREEN = 2
const COLOR_ORANGE = 3
const COLOR_RED = 4
const COLOR_YELLOW = 5
const COLOR_WHITE = 6
const COLOR_BLACK = 7
const COLOR_BROWN = 8
const COLOR_KHAKI = 9
const COLOR_PINK = 10
const COLOR_PURPLE = 11

# CONSOLE MODE
const MODE_DEFAULT = 0
const MODE_PERCENTAGE = 1
const MODE_POWER = 2

# FILTRATION SLOTS
const FILTER_SLOT_RIGHT = 0
const FILTER_SLOT_LEFT = 1

# FILTER CANISTERS
const FILTER_CARBON_DIOXIDE1 = 1635000764
const FILTER_CARBON_DIOXIDE2 = 416897318
const FILTER_CARBON_DIOXIDE3 = 1876847024
const FILTER_NITROGEN1 = 632853248
const FILTER_NITROGEN2 = -632657357
const FILTER_NITROGEN3 = -1387439451
const FILTER_NITROUS1 = -1247674305
const FILTER_NITROUS2 = 1824284061
const FILTER_NITROUS3 = 465267979
const FILTER_OXYGEN1 = -721824748
const FILTER_OXYGEN2 = -1067319543
const FILTER_OXYGEN3 = -1217998945
const FILTER_POLLUTANT1 = 1915566057
const FILTER_POLLUTANT2 = 63677771
const FILTER_POLLUTANT3 = 1959564765
const FILTER_VOLATILE1 = 15011598
const FILTER_VOLATILE2 = 1037507240
const FILTER_VOLATILE3 = 1255156286

var ShutdownTimer = 10
var CurrentState #= STATE_IDLE
var NextState #= STATE_FILTERING
var DisplayColour #= COLOR_WHITE

start:

# Read the current input and oupt states
var TotalInputMoles = db.TotalMolesInput
var InputPressure = db.PressureInput
var OutputPressure = db.PressureOutput
var OutputPressure2 = db.PressureOutput2
max OutputPressure OutputPressure OutputPressure2

# Read the current filter cartridge types and levels
var InputGasRatio

# LEFT
var FilterType = db.slot(FILTER_SLOT_LEFT).PrefabHash
var FilterQty = db.slot(FILTER_SLOT_LEFT).Quantity
readGasRatio() # Reads FilterType, sets InputGasRatio
var TotalRatio = InputGasRatio
var TotalQty = FilterQty

# RIGHT
FilterType = db.slot(FILTER_SLOT_RIGHT).PrefabHash
FilterQty = db.slot(FILTER_SLOT_RIGHT).Quantity
readGasRatio() # Reads FilterType, sets InputGasRatio
TotalRatio = TotalRatio + InputGasRatio
TotalQty = TotalQty + FilterQty

# Calculate the current filter canister state
var AverageFilterQty = TotalQty / 200

# Read the current input ratio depending on the cartridge type
var InputMoles = TotalRatio * TotalInputMoles

# DETERMINE NEXT STATE

# Idle -> Filtering
seq r15 CurrentState STATE_IDLE # if CurrentState == IDLE
beqz r15 state1_exit
sgt r15 InputMoles MIN_INPUT_MOLES # If input > min_input
beqz r15 state1_exit
move NextState STATE_FILTERING
state1_exit:

# Filtering -> Waiting
seq r15 CurrentState STATE_FILTERING # if CurrentState == FILTERING
beqz r15 state2_exit
sle r15 InputMoles MIN_INPUT_MOLES # if input <= min_input
beqz r15 state2_exit
move NextState STATE_WAITING
state2_exit:

# Filtering -> Idle
seq r15 CurrentState STATE_FILTERING # if CurrentState == FILTERING
beqz r15 state3_exit
sge r15 OutputPressure MAX_OUTPUT_PRESSURE # if output >= max_output
beqz r15 state3_exit
move NextState STATE_IDLE
state3_exit:

# Waiting -> Filtering
seq r15 CurrentState STATE_WAITING # if CurrentState == WAITING
beqz r15 state4_exit
sgt r15 InputMoles MIN_INPUT_MOLES # If input > min_input
beqz r15 state4_exit
move NextState STATE_FILTERING
state4_exit:

# Waiting -> Idle
seq r15 CurrentState STATE_WAITING # if CurrentState == WAITING
beqz r15 state5_exit
sle r15 ShutdownTimer 0 # if timer <= 0
beqz r15 state5_exit
move NextState STATE_IDLE
state5_exit:

# APPLY NEXT STATE
CurrentState = NextState

brne CurrentState STATE_IDLE 3
db.Mode = 0
DisplayColour = COLOR_GREY
ShutdownTimer = 10

brne CurrentState STATE_FILTERING 2
DisplayColour = COLOR_GREEN
db.Mode = 1

brne CurrentState STATE_WAITING 
DisplayColour = COLOR_ORANGE
ShutdownTimer = ShutdownTimer - 1

# OUTPUT VALUES TO ATTACHED DISPLAYS
bdseal AverageFilterQtyDisplay displayCartridgeAverage
bdseal InputMolesDisplay displayInputRatio

# LOOP BACK TO START
sleep 1
j start

###############################################################################
# FUNCTIONS
###############################################################################

function displayCartridgeAverage
    AverageFilterQtyDisplay.Mode = MODE_PERCENTAGE
    AverageFilterQtyDisplay.Setting = AverageFilterQty
    AverageFilterQtyDisplay.Color = DisplayColour
end

function displayInputRatio
    InputMolesDisplay.Mode = MODE_DEFAULT
    InputMolesDisplay.Setting = InputMoles
    InputMolesDisplay.Color = DisplayColour
end

function readGasRatio
    InputGasRatio = 0
    breq FilterType FILTER_OXYGEN1 3 # If small oxy
    breq FilterType FILTER_OXYGEN2 2 # If med oxy
    brne FilterType FILTER_OXYGEN3 2 # if not big oxy
    l InputGasRatio db RatioOxygenInput
    breq FilterType FILTER_NITROGEN1 3 # If small n2
    breq FilterType FILTER_NITROGEN2 2 # If med n2
    brne FilterType FILTER_NITROGEN3 2 # if not big n2
    l InputGasRatio db RatioNitrogenInput
    breq FilterType FILTER_NITROUS1 3 # If small no2
    breq FilterType FILTER_NITROUS2 2 # If med no2
    brne FilterType FILTER_NITROUS3 2 # if not big no2
    l InputGasRatio db RatioNitrousOxideInput
    breq FilterType FILTER_CARBON_DIOXIDE1 3 # If small co2
    breq FilterType FILTER_CARBON_DIOXIDE2 2 # If med co2
    brne FilterType FILTER_CARBON_DIOXIDE3 2 # if not big co2
    l InputGasRatio db RatioCarbonDioxideInput
    breq FilterType FILTER_POLLUTANT1 3 # If small x
    breq FilterType FILTER_POLLUTANT2 2 # If med x
    brne FilterType FILTER_POLLUTANT3 2 # if not big x
    l InputGasRatio db RatioPollutantInput
    breq FilterType FILTER_VOLATILE1 3 # If small V
    breq FilterType FILTER_VOLATILE2 2 # If med V
    brne FilterType FILTER_VOLATILE3 2 # if not big V
    l InputGasRatio db RatioVolatilesInput
end
